<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0516.1717                               -->
<workbook original-version='18.1' source-build='2021.4.7 (20214.22.0516.1717)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Coffee_domestic_consumption' inline='true' name='federated.0xywb7b0bifdc414vabe317jgegz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Coffee_domestic_consumption' name='excel-direct.1x6p98i1ief9fu1dzxk620y59mzo'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/albalgalv/Documents/GIT/GITHUB personal/all/learning/Tableau/Data/Coffee_domestic_consumption.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1x6p98i1ief9fu1dzxk620y59mzo' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C56:no:A1:C56:0' header='yes' outcome='6'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='string' name='Coffee type' ordinal='1' />
            <column datatype='integer' name='Total_domestic_consumption' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1x6p98i1ief9fu1dzxk620y59mzo' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C56:no:A1:C56:0' header='yes' outcome='6'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='string' name='Coffee type' ordinal='1' />
            <column datatype='integer' name='Total_domestic_consumption' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C56:no:A1:C56:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1C7FBEEECE644CAC9CFB92ABCA6E38FC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Coffee type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Coffee type]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Coffee type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1C7FBEEECE644CAC9CFB92ABCA6E38FC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_domestic_consumption</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_domestic_consumption]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Total_domestic_consumption</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1C7FBEEECE644CAC9CFB92ABCA6E38FC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Cosumption' datatype='integer' name='[Calculation_525232356622909440]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Total_domestic_consumption]' />
      </column>
      <column datatype='string' name='[Coffee type]' role='dimension' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_1C7FBEEECE644CAC9CFB92ABCA6E38FC]' role='measure' type='quantitative' />
      <group caption='Coffee type Arabica' name='[Coffee type Arabica]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[Coffee type]' member='&quot;Arabica&quot;' />
          <groupfilter function='member' level='[Coffee type]' member='&quot;Arabica/Robusta&quot;' />
        </groupfilter>
      </group>
      <group caption='Country Set Top 10' name='[Country Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Calculation_525232356622909440])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Country]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Russia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_1C7FBEEECE644CAC9CFB92ABCA6E38FC'>
            <properties context=''>
              <relation connection='excel-direct.1x6p98i1ief9fu1dzxk620y59mzo' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C56:no:A1:C56:0' header='yes' outcome='6'>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='string' name='Coffee type' ordinal='1' />
                  <column datatype='integer' name='Total_domestic_consumption' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Coffee_domestic_export' inline='true' name='federated.1teh2jo1i0htsk192cjr712rn8se' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Coffee_domestic_export' name='excel-direct.10iv8dt0nfe75t11h3rnn01vv8yh'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/albalgalv/Documents/GIT/GITHUB personal/all/learning/Tableau/Data/Coffee_domestic_export.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.10iv8dt0nfe75t11h3rnn01vv8yh' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B56:no:A1:B56:0' header='yes' outcome='6'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='integer' name='Total_export' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.10iv8dt0nfe75t11h3rnn01vv8yh' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B56:no:A1:B56:0' header='yes' outcome='6'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='integer' name='Total_export' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B56:no:A1:B56:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_519629FE4E1A42E4BB6D8DE0F026E84E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_export</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_export]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Total_export</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_519629FE4E1A42E4BB6D8DE0F026E84E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_519629FE4E1A42E4BB6D8DE0F026E84E]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Russia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_519629FE4E1A42E4BB6D8DE0F026E84E'>
            <properties context=''>
              <relation connection='excel-direct.10iv8dt0nfe75t11h3rnn01vv8yh' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B56:no:A1:B56:0' header='yes' outcome='6'>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='integer' name='Total_export' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Coffee_domestic_consumption+ (Coffee)' inline='true' name='federated.0wqxc441680i4514p30zj0x7c8aw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Coffee' name='excel-direct.0xr96ci0rk8yup1h0pbt0064xynm'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/albalgalv/Documents/GIT/GITHUB personal/all/learning/Tableau/Data/Coffee.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0xr96ci0rk8yup1h0pbt0064xynm' name='Coffee_domestic_consumption' table='[Coffee_domestic_consumption$]' type='table'>
          <columns gridOrigin='A1:D1651:no:A1:D1651:0' header='yes' outcome='6'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='string' name='Coffee type' ordinal='1' />
            <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='2' />
            <column datatype='integer' name='Consumption' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.0xr96ci0rk8yup1h0pbt0064xynm' name='Coffee_domestic_consumption' table='[Coffee_domestic_consumption$]' type='table'>
            <columns gridOrigin='A1:D1651:no:A1:D1651:0' header='yes' outcome='6'>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='string' name='Coffee type' ordinal='1' />
              <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='2' />
              <column datatype='integer' name='Consumption' ordinal='3' />
            </columns>
          </relation>
          <relation connection='excel-direct.0xr96ci0rk8yup1h0pbt0064xynm' name='Coffee_domestic_export1' table='[Coffee_domestic_export$]' type='table'>
            <columns gridOrigin='A1:C1651:no:A1:C1651:0' header='yes' outcome='6'>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='1' />
              <column datatype='integer' name='Export' ordinal='2' />
            </columns>
          </relation>
          <relation connection='excel-direct.0xr96ci0rk8yup1h0pbt0064xynm' name='Coffee_domestic_export' table='[Coffee_domestic_export$]' type='table'>
            <columns gridOrigin='A1:C1651:no:A1:C1651:0' header='yes' outcome='6'>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='1' />
              <column datatype='integer' name='Export' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Coffee type]' value='[Coffee_domestic_consumption].[Coffee type]' />
          <map key='[Consumption]' value='[Coffee_domestic_consumption].[Consumption]' />
          <map key='[Country (Coffee!domestic!export)]' value='[Coffee_domestic_export].[Country]' />
          <map key='[Country (Coffee!domestic!export1)]' value='[Coffee_domestic_export1].[Country]' />
          <map key='[Country]' value='[Coffee_domestic_consumption].[Country]' />
          <map key='[Export (Coffee!domestic!export1)]' value='[Coffee_domestic_export1].[Export]' />
          <map key='[Export]' value='[Coffee_domestic_export].[Export]' />
          <map key='[Year (Coffee!domestic!export)]' value='[Coffee_domestic_export].[Year]' />
          <map key='[Year (Coffee!domestic!export1)]' value='[Coffee_domestic_export1].[Year]' />
          <map key='[Year]' value='[Coffee_domestic_consumption].[Year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Coffee_domestic_consumption]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D1651:no:A1:D1651:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Coffee_domestic_export1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C1651:no:A1:C1651:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Coffee_domestic_export]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C1651:no:A1:C1651:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Coffee_domestic_consumption]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Coffee!domestic!consumption_69034C9E8A0B4B92A882BA68F09BA4A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Coffee type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Coffee type]</local-name>
            <parent-name>[Coffee_domestic_consumption]</parent-name>
            <remote-alias>Coffee type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Coffee!domestic!consumption_69034C9E8A0B4B92A882BA68F09BA4A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Coffee_domestic_consumption]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Coffee!domestic!consumption_69034C9E8A0B4B92A882BA68F09BA4A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Consumption</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Consumption]</local-name>
            <parent-name>[Coffee_domestic_consumption]</parent-name>
            <remote-alias>Consumption</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Coffee!domestic!consumption_69034C9E8A0B4B92A882BA68F09BA4A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country (Coffee!domestic!export1)]</local-name>
            <parent-name>[Coffee_domestic_export1]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Coffee!domestic!export_A84A41DD70E24AA589E1C340DC63F4E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year (Coffee!domestic!export1)]</local-name>
            <parent-name>[Coffee_domestic_export1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Coffee!domestic!export_A84A41DD70E24AA589E1C340DC63F4E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Export</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Export (Coffee!domestic!export1)]</local-name>
            <parent-name>[Coffee_domestic_export1]</parent-name>
            <remote-alias>Export</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Coffee!domestic!export_A84A41DD70E24AA589E1C340DC63F4E4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country (Coffee!domestic!export)]</local-name>
            <parent-name>[Coffee_domestic_export]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Coffee!domestic!export_C328B4596DB14DD696FE2A5BD3E8D8D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year (Coffee!domestic!export)]</local-name>
            <parent-name>[Coffee_domestic_export]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>8</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Coffee!domestic!export_C328B4596DB14DD696FE2A5BD3E8D8D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Export</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Export]</local-name>
            <parent-name>[Coffee_domestic_export]</parent-name>
            <remote-alias>Export</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Coffee!domestic!export_C328B4596DB14DD696FE2A5BD3E8D8D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Consumption]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country (Coffee!domestic!export)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country (Coffee!domestic!export1)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Export]' role='measure' type='quantitative' />
      <column datatype='date' name='[Year (Coffee!domestic!export)]' role='dimension' type='quantitative' />
      <column datatype='date' name='[Year (Coffee!domestic!export1)]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Coffee_domestic_consumption' datatype='table' name='[__tableau_internal_object_id__].[Coffee!domestic!consumption_69034C9E8A0B4B92A882BA68F09BA4A3]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Coffee_domestic_export1' datatype='table' name='[__tableau_internal_object_id__].[Coffee!domestic!export_A84A41DD70E24AA589E1C340DC63F4E4]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Coffee_domestic_export' datatype='table' name='[__tableau_internal_object_id__].[Coffee!domestic!export_C328B4596DB14DD696FE2A5BD3E8D8D5]' role='measure' type='quantitative' />
      <column-instance column='[Year (Coffee!domestic!export)]' derivation='None' name='[none:Year (Coffee!domestic!export):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Consumption]' derivation='Sum' name='[sum:Consumption:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Export]' derivation='Sum' name='[sum:Export:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Year (Coffee!domestic!export)]' derivation='Sum' name='[sum:Year (Coffee!domestic!export):qk]' pivot='key' type='quantitative' />
      <group caption='Country Set' name='[Country Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Consumption])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Country]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0wqxc441680i4514p30zj0x7c8aw].[sum:Consumption:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0wqxc441680i4514p30zj0x7c8aw]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0wqxc441680i4514p30zj0x7c8aw].[none:Year (Coffee!domestic!export):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0wqxc441680i4514p30zj0x7c8aw].[sum:Year (Coffee!domestic!export):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0wqxc441680i4514p30zj0x7c8aw].[sum:Export:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Russia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Coffee_domestic_consumption' id='Coffee!domestic!consumption_69034C9E8A0B4B92A882BA68F09BA4A3'>
            <properties context=''>
              <relation connection='excel-direct.0xr96ci0rk8yup1h0pbt0064xynm' name='Coffee_domestic_consumption' table='[Coffee_domestic_consumption$]' type='table'>
                <columns gridOrigin='A1:D1651:no:A1:D1651:0' header='yes' outcome='6'>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='string' name='Coffee type' ordinal='1' />
                  <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='2' />
                  <column datatype='integer' name='Consumption' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Coffee_domestic_export1' id='Coffee!domestic!export_A84A41DD70E24AA589E1C340DC63F4E4'>
            <properties context=''>
              <relation connection='excel-direct.0xr96ci0rk8yup1h0pbt0064xynm' name='Coffee_domestic_export1' table='[Coffee_domestic_export$]' type='table'>
                <columns gridOrigin='A1:C1651:no:A1:C1651:0' header='yes' outcome='6'>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='1' />
                  <column datatype='integer' name='Export' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Coffee_domestic_export' id='Coffee!domestic!export_C328B4596DB14DD696FE2A5BD3E8D8D5'>
            <properties context=''>
              <relation connection='excel-direct.0xr96ci0rk8yup1h0pbt0064xynm' name='Coffee_domestic_export' table='[Coffee_domestic_export$]' type='table'>
                <columns gridOrigin='A1:C1651:no:A1:C1651:0' header='yes' outcome='6'>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='1' />
                  <column datatype='integer' name='Export' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Year]' />
              <expression op='[Year (Coffee!domestic!export1)]' />
            </expression>
            <first-end-point object-id='Coffee!domestic!consumption_69034C9E8A0B4B92A882BA68F09BA4A3' />
            <second-end-point object-id='Coffee!domestic!export_A84A41DD70E24AA589E1C340DC63F4E4' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Country]' />
              <expression op='[Country (Coffee!domestic!export)]' />
            </expression>
            <first-end-point object-id='Coffee!domestic!consumption_69034C9E8A0B4B92A882BA68F09BA4A3' />
            <second-end-point object-id='Coffee!domestic!export_C328B4596DB14DD696FE2A5BD3E8D8D5' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Bar chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 counties&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Coffee_domestic_consumption+ (Coffee)' name='federated.0wqxc441680i4514p30zj0x7c8aw' />
          </datasources>
          <datasource-dependencies datasource='federated.0wqxc441680i4514p30zj0x7c8aw'>
            <column datatype='integer' name='[Consumption]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Export]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Consumption]' derivation='Sum' name='[sum:Consumption:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Export]' derivation='Sum' name='[sum:Export:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wqxc441680i4514p30zj0x7c8aw].[Country Set]' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0wqxc441680i4514p30zj0x7c8aw].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0wqxc441680i4514p30zj0x7c8aw].[sum:Consumption:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0wqxc441680i4514p30zj0x7c8aw].[Country Set]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wqxc441680i4514p30zj0x7c8aw].[sum:Export:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wqxc441680i4514p30zj0x7c8aw].[none:Country:nk]</rows>
        <cols>[federated.0wqxc441680i4514p30zj0x7c8aw].[sum:Consumption:qk]</cols>
      </table>
      <simple-id uuid='{0B9D671F-5810-472A-B608-EFB2756D02B4}' />
    </worksheet>
    <worksheet name='Line chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Coffee_domestic_consumption+ (Coffee)' name='federated.0wqxc441680i4514p30zj0x7c8aw' />
          </datasources>
          <datasource-dependencies datasource='federated.0wqxc441680i4514p30zj0x7c8aw'>
            <column datatype='integer' name='[Consumption]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Export]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Consumption]' derivation='Sum' name='[sum:Consumption:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Export]' derivation='Sum' name='[sum:Export:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wqxc441680i4514p30zj0x7c8aw].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wqxc441680i4514p30zj0x7c8aw].[sum:Export:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wqxc441680i4514p30zj0x7c8aw].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wqxc441680i4514p30zj0x7c8aw].[sum:Consumption:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wqxc441680i4514p30zj0x7c8aw].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0wqxc441680i4514p30zj0x7c8aw].[sum:Export:qk] + [federated.0wqxc441680i4514p30zj0x7c8aw].[sum:Consumption:qk])</rows>
        <cols>[federated.0wqxc441680i4514p30zj0x7c8aw].[yr:Year:ok]</cols>
      </table>
      <simple-id uuid='{1874574B-A224-4FDB-B705-BA4462FCAB85}' />
    </worksheet>
    <worksheet name='Planet'>
      <table>
        <view>
          <datasources>
            <datasource caption='Coffee_domestic_consumption' name='federated.0xywb7b0bifdc414vabe317jgegz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0xywb7b0bifdc414vabe317jgegz'>
            <column caption='Cosumption' datatype='integer' name='[Calculation_525232356622909440]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total_domestic_consumption]' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Total_domestic_consumption]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_525232356622909440]' derivation='Sum' name='[sum:Calculation_525232356622909440:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0xywb7b0bifdc414vabe317jgegz].[none:Country:nk]' />
              <color column='[federated.0xywb7b0bifdc414vabe317jgegz].[sum:Calculation_525232356622909440:qk]' />
              <geometry column='[federated.0xywb7b0bifdc414vabe317jgegz].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0xywb7b0bifdc414vabe317jgegz].[Latitude (generated)]</rows>
        <cols>[federated.0xywb7b0bifdc414vabe317jgegz].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{E5DF4676-1703-46DC-8BD4-2BA06C0C29AD}' />
    </worksheet>
    <worksheet name='Set1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Coffee_domestic_consumption' name='federated.0xywb7b0bifdc414vabe317jgegz' />
          </datasources>
          <datasource-dependencies datasource='federated.0xywb7b0bifdc414vabe317jgegz'>
            <column caption='Cosumption' datatype='integer' name='[Calculation_525232356622909440]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total_domestic_consumption]' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Total_domestic_consumption]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_525232356622909440]' derivation='Sum' name='[sum:Calculation_525232356622909440:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xywb7b0bifdc414vabe317jgegz].[Country Set]' />
          <slices>
            <column>[federated.0xywb7b0bifdc414vabe317jgegz].[Country Set]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0xywb7b0bifdc414vabe317jgegz].[sum:Calculation_525232356622909440:qk]</rows>
        <cols>[federated.0xywb7b0bifdc414vabe317jgegz].[Country Set]</cols>
      </table>
      <simple-id uuid='{2F11BBA7-C50B-4A62-AE52-A19622958DF0}' />
    </worksheet>
    <worksheet name='Set2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Coffee_domestic_consumption' name='federated.0xywb7b0bifdc414vabe317jgegz' />
            <datasource caption='Coffee_domestic_export' name='federated.1teh2jo1i0htsk192cjr712rn8se' />
          </datasources>
          <datasource-dependencies datasource='federated.0xywb7b0bifdc414vabe317jgegz'>
            <column caption='Cosumption' datatype='integer' name='[Calculation_525232356622909440]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total_domestic_consumption]' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Total_domestic_consumption]' role='measure' type='quantitative' />
            <column-instance column='[Country Set]' derivation='InOut' name='[io:Country Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_525232356622909440]' derivation='Sum' name='[sum:Calculation_525232356622909440:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1teh2jo1i0htsk192cjr712rn8se'>
            <column datatype='integer' name='[Total_export]' role='measure' type='quantitative' />
            <column-instance column='[Total_export]' derivation='Sum' name='[sum:Total_export:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xywb7b0bifdc414vabe317jgegz].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xywb7b0bifdc414vabe317jgegz].[sum:Calculation_525232356622909440:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1teh2jo1i0htsk192cjr712rn8se].[sum:Total_export:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0xywb7b0bifdc414vabe317jgegz].[io:Country Set:nk]'>
            <groupfilter function='member' level='[io:Country Set:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0xywb7b0bifdc414vabe317jgegz].[none:Country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Viet Nam&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Venezuela&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0xywb7b0bifdc414vabe317jgegz].[io:Country Set:nk]</column>
            <column>[federated.0xywb7b0bifdc414vabe317jgegz].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0xywb7b0bifdc414vabe317jgegz].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xywb7b0bifdc414vabe317jgegz].[none:Country:nk]</rows>
        <cols>[federated.0xywb7b0bifdc414vabe317jgegz].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{342727C7-B792-4970-A603-868261EEB8D7}' />
    </worksheet>
    <worksheet name='Set3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Coffee_domestic_consumption' name='federated.0xywb7b0bifdc414vabe317jgegz' />
          </datasources>
          <datasource-dependencies datasource='federated.0xywb7b0bifdc414vabe317jgegz'>
            <column caption='Cosumption' datatype='integer' name='[Calculation_525232356622909440]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total_domestic_consumption]' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Total_domestic_consumption]' role='measure' type='quantitative' />
            <column-instance column='[Country Set]' derivation='InOut' name='[io:Country Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_525232356622909440]' derivation='Sum' name='[sum:Calculation_525232356622909440:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xywb7b0bifdc414vabe317jgegz].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xywb7b0bifdc414vabe317jgegz].[sum:Calculation_525232356622909440:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xywb7b0bifdc414vabe317jgegz].[io:Country Set:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0xywb7b0bifdc414vabe317jgegz].[io:Country Set:nk] / [federated.0xywb7b0bifdc414vabe317jgegz].[none:Country:nk])</rows>
        <cols>[federated.0xywb7b0bifdc414vabe317jgegz].[sum:Calculation_525232356622909440:qk]</cols>
      </table>
      <simple-id uuid='{8AB05B21-93A5-4FD4-9883-58FE33BA7F6F}' />
    </worksheet>
  </worksheets>
  <windows source-height='72'>
    <window class='worksheet' name='Planet'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xywb7b0bifdc414vabe317jgegz].[sum:Calculation_525232356622909440:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xywb7b0bifdc414vabe317jgegz].[:Measure Names]</field>
            <field>[federated.0xywb7b0bifdc414vabe317jgegz].[io:Coffee type Arabica:nk]</field>
            <field>[federated.0xywb7b0bifdc414vabe317jgegz].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BBF6C5A5-1947-4C97-8CDB-806835939206}' />
    </window>
    <window class='worksheet' name='Bar chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0wqxc441680i4514p30zj0x7c8aw].[sum:Export:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wqxc441680i4514p30zj0x7c8aw].[Country Set]</field>
            <field>[federated.0wqxc441680i4514p30zj0x7c8aw].[none:Country:nk]</field>
            <field>[federated.0xywb7b0bifdc414vabe317jgegz].[none:Coffee type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{80F327B5-4817-4B39-B34E-2D4598CD2E97}' />
    </window>
    <window class='worksheet' maximized='true' name='Line chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0wqxc441680i4514p30zj0x7c8aw].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wqxc441680i4514p30zj0x7c8aw].[:Measure Names]</field>
            <field>[federated.0wqxc441680i4514p30zj0x7c8aw].[tyr:Year:qk]</field>
            <field>[federated.0wqxc441680i4514p30zj0x7c8aw].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4DDFAF63-DBA5-40E8-BD52-369ED58DF6B0}' />
    </window>
    <window class='worksheet' name='Set1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xywb7b0bifdc414vabe317jgegz].[io:Coffee type Arabica:nk]</field>
            <field>[federated.0xywb7b0bifdc414vabe317jgegz].[io:Country Set:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6FDF54F7-EF76-4ABA-9477-297C1F9FDCD2}' />
    </window>
    <window class='worksheet' name='Set2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xywb7b0bifdc414vabe317jgegz].[Country Set]</field>
            <field>[federated.0xywb7b0bifdc414vabe317jgegz].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{76B05037-72DE-4ECF-87F2-15402793B8C0}' />
    </window>
    <window class='worksheet' name='Set3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xywb7b0bifdc414vabe317jgegz].[io:Country Set:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xywb7b0bifdc414vabe317jgegz].[io:Country Set:nk]</field>
            <field>[federated.0xywb7b0bifdc414vabe317jgegz].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{14024B0F-4195-428F-B454-0119C9F84A8C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Bar chart' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Line chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Planet' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Set1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Set2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Set3' width='192'>
      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
      v3zu/wexHYFmIGjMKAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
